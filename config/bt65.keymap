#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        LOL_Q: LOL_Q {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Z &kp Q &kp M &kp N8 &kp N2 &kp TAB &kp LS(F) &kp LS(H) &kp N3 &kp F &kp LS(G) &kp N4 &kp N4 &kp N5 &kp F &kp Z &kp Z &kp LS(S) &kp LS(U) &kp LS(Y) &kp N9>;
            label = "LOL_Q";
        };
        Genshin_Q: Genshin_Q {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U &kp A &kp N &kp T &kp K &kp N2 &kp N7 &kp N7 &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M &kp TAB &kp LS(Q) &kp U &kp A &kp N &kp N1 &kp N2 &kp N3 &kp N4 &kp N5>;
            label = "GENSHIN_Q";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |BKSP | INS		|
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   \    | DEL		|
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |PGUP	|
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /   |   SHIFT  | UP   | PGDN|
            // |  CTL  |  WIN  |  ALT  |            SPACE               | ALT | 1    |  MENU| LEFT |  DOWN    | RIGHT	|
            // ------------------------------------------------------------------------------------------------------------

            bindings = <
&kp ESC    &kp N1     &kp N2    &kp N3    &kp N4     &kp N5    &kp N6  &kp N7     &kp N8     &kp N9    &kp N0     &kp MINUS  &kp EQUAL  &kp BACKSPACE  &kp DEL
&kp TAB    &kp Q      &kp W     &kp E     &kp R      &kp T     &kp Y   &kp U      &kp I      &kp O     &kp P      &kp LBKT   &kp RBKT   &kp BSLH       &kp HOME
&kp CLCK   &kp A      &kp S     &kp D     &kp F      &kp G     &kp H   &kp J      &kp K      &kp L     &kp SEMI   &kp SQT    &kp RET    &kp PG_UP
&kp LSHFT  &kp Z      &kp X     &kp C     &kp V      &kp B     &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH   &kp RSHFT  &kp UP     &kp PG_DN
           &kp LCTRL  &kp LGUI  &kp LALT  &kp SPACE  &kp RALT  &mo 1   &kp RCTRL  &kp LEFT   &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise {
            bindings = <
&kp GRAVE  &kp K_PLAY_PAUSE  &kp K_PREVIOUS  &kp K_NEXT  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp F9  &kp F10  &kp F11  &kp F12      &trans             &kp C_SLEEP_MODE
&trans     &trans            &trans          &trans      &trans      &trans             &trans           &trans                &trans                &trans  &trans   &trans   &trans       &sys_reset         &kp END
&trans     &trans            &trans          &trans      &trans      &trans             &trans           &trans                &trans                &LOL_Q  &trans   &trans   &bootloader  &kp C_VOLUME_DOWN
&mo 2      &trans            &trans          &trans      &trans      &trans             &trans           &trans                &trans                &trans  &trans   &mo 2    &trans       &kp C_VOLUME_UP
           &trans            &trans          &trans      &trans      &trans             &trans           &trans                &trans                &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
&trans  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &kp F11          &kp F12          &trans        &bl BL_TOG
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &trans           &trans        &bl BL_DEC
&trans  &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &bl BL_INC
&trans  &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &trans           &rgb_ug RGB_BRI  &bl BL_CYCLE
        &trans           &trans           &trans           &trans           &trans           &trans           &trans           &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF
            >;
        };
    };
};
